{"ast":null,"code":"import _classCallCheck from \"/Users/mac/Desktop/react/my-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mac/Desktop/react/my-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/mac/Desktop/react/my-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/mac/Desktop/react/my-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/mac/Desktop/react/my-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/mac/Desktop/react/my-app/src/component/newslist.js\";\nimport React, { Component } from 'react';\n\nvar Newslist =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Newslist, _Component);\n\n  function Newslist() {\n    var _this2;\n\n    _classCallCheck(this, Newslist);\n\n    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(Newslist).call(this)); // 调用基类的所有初始化方法\n\n    _this2.state = {\n      list: []\n    };\n    return _this2;\n  }\n\n  _createClass(Newslist, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this = this;\n\n      var myHeaders = new Headers();\n      myHeaders.append(\"Content-Type\", \"application/json\");\n      var init = {\n        method: 'GET',\n        headers: myHeaders\n      };\n      fetch(\"http://localhost:3000/newslist\", init).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        if (data.states == 200) {\n          _this.setState({\n            list: data.list\n          });\n        } else {\n          console.log(\"请求出错\");\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var items = [];\n\n      var _this = this;\n\n      if (Object.keys(_this.state.list).length > 0) {\n        var title = _this.state.list.title;\n        title.map(function (item, i) {\n          items.push(React.createElement(\"li\", {\n            key: i,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 36\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"news_title\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 37\n            },\n            __self: this\n          }, React.createElement(\"a\", {\n            href: title[i].href,\n            target: \"_blank\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 38\n            },\n            __self: this\n          }, React.createElement(\"h3\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 39\n            },\n            __self: this\n          }, title[i].title)))));\n        });\n        return React.createElement(\"ul\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }, items);\n      } else {\n        return React.createElement(\"ul\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }, React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }, \"\\u6682\\u65E0\\u6570\\u636E\"));\n      }\n    }\n  }]);\n\n  return Newslist;\n}(Component);\n\nexport default Newslist;","map":{"version":3,"sources":["/Users/mac/Desktop/react/my-app/src/component/newslist.js"],"names":["React","Component","Newslist","state","list","_this","myHeaders","Headers","append","init","method","headers","fetch","then","response","json","data","states","setState","console","log","items","Object","keys","length","title","map","item","i","push","href"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;IAEMC,Q;;;;;AACF,sBAAc;AAAA;;AAAA;;AACV,oFADU,CACD;;AACT,WAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE;AADK,KAAb;AAFU;AAKb;;;;wCACmB;AAChB,UAAIC,KAAK,GAAG,IAAZ;;AACA,UAAIC,SAAS,GAAG,IAAIC,OAAJ,EAAhB;AACAD,MAAAA,SAAS,CAACE,MAAV,CAAiB,cAAjB,EAAiC,kBAAjC;AACA,UAAIC,IAAI,GAAG;AACTC,QAAAA,MAAM,EAAC,KADE;AAETC,QAAAA,OAAO,EAACL;AAFC,OAAX;AAIAM,MAAAA,KAAK,CAAC,gCAAD,EAAkCH,IAAlC,CAAL,CAA6CI,IAA7C,CAAkD,UAAAC,QAAQ,EAAI;AAC1D,eAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,OAFH,EAEKF,IAFL,CAEW,UAAAG,IAAI,EAAI;AACb,YAAGA,IAAI,CAACC,MAAL,IAAe,GAAlB,EAAsB;AACpBZ,UAAAA,KAAK,CAACa,QAAN,CAAgB;AACZd,YAAAA,IAAI,EAAEY,IAAI,CAACZ;AADC,WAAhB;AAGD,SAJD,MAIK;AACHe,UAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACD;AACJ,OAVH;AAWH;;;6BACQ;AACL,UAAIC,KAAK,GAAG,EAAZ;;AACA,UAAIhB,KAAK,GAAG,IAAZ;;AACA,UAAGiB,MAAM,CAACC,IAAP,CAAYlB,KAAK,CAACF,KAAN,CAAYC,IAAxB,EAA8BoB,MAA9B,GAAqC,CAAxC,EAA0C;AACxC,YAAIC,KAAK,GAAGpB,KAAK,CAACF,KAAN,CAAYC,IAAZ,CAAiBqB,KAA7B;AACAA,QAAAA,KAAK,CAACC,GAAN,CAAU,UAACC,IAAD,EAAMC,CAAN,EAAY;AACpBP,UAAAA,KAAK,CAACQ,IAAN,CAAY;AAAI,YAAA,GAAG,EAAED,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACV;AAAK,YAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACA;AAAG,YAAA,IAAI,EAAEH,KAAK,CAACG,CAAD,CAAL,CAASE,IAAlB;AAAwB,YAAA,MAAM,EAAC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAKL,KAAK,CAACG,CAAD,CAAL,CAASH,KAAd,CADF,CADA,CADU,CAAZ;AAOD,SARD;AASA,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACFJ,KADE,CAAP;AAGD,OAdD,MAcK;AACH,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCADG,CAAP;AAGD;AACJ;;;;EAjDkBpB,S;;AAoDvB,eAAeC,QAAf","sourcesContent":["import React, { Component } from 'react';\n\nclass Newslist extends Component{\n    constructor() {\n        super(); // 调用基类的所有初始化方法\n        this.state = {\n          list: []\n        }\n    }\n    componentDidMount() {\n        var _this = this;\n        var myHeaders = new Headers();\n        myHeaders.append(\"Content-Type\", \"application/json\");\n        let init = {\n          method:'GET',\n          headers:myHeaders\n      };\n        fetch(\"http://localhost:3000/newslist\",init).then(response => {\n            return response.json()\n          }).then( data => {\n              if(data.states == 200){\n                _this.setState ({\n                    list: data.list\n                });\n              }else{\n                console.log(\"请求出错\")\n              }\n          })\n    }\n    render() {\n        let items = [];\n        let _this = this;\n        if(Object.keys(_this.state.list).length>0){\n          var title = _this.state.list.title\n          title.map((item,i) => {\n            items.push( <li key={i}>\n              <div className=\"news_title\">\n              <a href={title[i].href} target=\"_blank\">\n                <h3>{title[i].title}</h3>\n              </a>\n              </div>\n            </li>);\n          })\n          return <ul>\n              {items}\n          </ul>\n        }else{\n          return <ul>\n              <li>暂无数据</li>\n          </ul>\n        }\n    }\n}\n\nexport default Newslist;"]},"metadata":{},"sourceType":"module"}