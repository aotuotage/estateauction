{"ast":null,"code":"import _classCallCheck from \"/Users/mac/Desktop/react/my-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mac/Desktop/react/my-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/mac/Desktop/react/my-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/mac/Desktop/react/my-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/Users/mac/Desktop/react/my-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/mac/Desktop/react/my-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/mac/Desktop/react/my-app/src/component/selectmap.js\";\nimport React, { Component } from 'react';\n\nvar Selectmap =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Selectmap, _Component);\n\n  function Selectmap(props) {\n    var _this;\n\n    _classCallCheck(this, Selectmap);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Selectmap).call(this, props));\n    _this.echart = _this.echart.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Selectmap, [{\n    key: \"echart\",\n    value: function echart() {\n      $.getJSON('https://echarts.baidu.com/examples/data-gl/asset/data/buildings.json', function (buildingsGeoJSON) {\n        echarts.registerMap('buildings', buildingsGeoJSON);\n        var regions = buildingsGeoJSON.features.map(function (feature) {\n          return {\n            name: feature.properties.name,\n            value: Math.max(Math.sqrt(feature.properties.height), 0.1),\n            height: Math.max(Math.sqrt(feature.properties.height), 0.1)\n          };\n        });\n        myChart.setOption({\n          series: [{\n            type: 'map3D',\n            map: 'buildings',\n            shading: 'realistic',\n            realisticMaterial: {\n              roughness: 0.6,\n              textureTiling: 20,\n              detailTexture: 'data-gl/asset/woods.jpg'\n            },\n            postEffect: {\n              enable: true,\n              bloom: {\n                enable: false\n              },\n              SSAO: {\n                enable: true,\n                quality: 'medium',\n                radius: 10,\n                intensity: 1.2\n              },\n              depthOfField: {\n                enable: false,\n                focalRange: 5,\n                fstop: 1,\n                blurRadius: 6\n              }\n            },\n            groundPlane: {\n              show: true,\n              color: '#333'\n            },\n            light: {\n              main: {\n                intensity: 6,\n                shadow: true,\n                shadowQuality: 'high',\n                alpha: 30\n              },\n              ambient: {\n                intensity: 0\n              },\n              ambientCubemap: {\n                texture: 'data-gl/asset/canyon.hdr',\n                exposure: 2,\n                diffuseIntensity: 1,\n                specularIntensity: 1\n              }\n            },\n            viewControl: {\n              minBeta: -360,\n              maxBeta: 360\n            },\n            itemStyle: {\n              areaColor: '#666'\n            },\n            label: {\n              textStyle: {\n                color: 'white'\n              }\n            },\n            silent: true,\n            instancing: true,\n            boxWidth: 200,\n            boxHeight: 1,\n            data: regions\n          }]\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"footer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, \"\\u4EACICP\\u590714023220\\u53F7 | \\u4EAC\\u516C\\u7F51\\u5B89\\u590711010502031492 | \\u706B\\u661F\\u5730\\u4EA7\\u7535\\u5B50\\u5546\\u52A1\\u6709\\u9650\\u516C\\u53F8 \\xA9 2014-2018 All Rights Reserved\"));\n    }\n  }]);\n\n  return Selectmap;\n}(Component);\n\nexport default Selectmap;","map":{"version":3,"sources":["/Users/mac/Desktop/react/my-app/src/component/selectmap.js"],"names":["React","Component","Selectmap","props","echart","bind","$","getJSON","buildingsGeoJSON","echarts","registerMap","regions","features","map","feature","name","properties","value","Math","max","sqrt","height","myChart","setOption","series","type","shading","realisticMaterial","roughness","textureTiling","detailTexture","postEffect","enable","bloom","SSAO","quality","radius","intensity","depthOfField","focalRange","fstop","blurRadius","groundPlane","show","color","light","main","shadow","shadowQuality","alpha","ambient","ambientCubemap","texture","exposure","diffuseIntensity","specularIntensity","viewControl","minBeta","maxBeta","itemStyle","areaColor","label","textStyle","silent","instancing","boxWidth","boxHeight","data"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nclass Selectmap extends Component{\n    constructor(props){\n        super(props); \n        this.echart = this.echart.bind(this);\n    }\n    echart(){\n        $.getJSON('https://echarts.baidu.com/examples/data-gl/asset/data/buildings.json', function (buildingsGeoJSON) {\n\n            echarts.registerMap('buildings', buildingsGeoJSON);\n        \n            var regions = buildingsGeoJSON.features.map(function (feature) {\n                return {\n                    name: feature.properties.name,\n                    value: Math.max(Math.sqrt(feature.properties.height), 0.1),\n                    height: Math.max(Math.sqrt(feature.properties.height), 0.1)\n                };\n            });\n        \n        \n            myChart.setOption({\n                series: [{\n                    type: 'map3D',\n                    map: 'buildings',\n                    shading: 'realistic',\n                    realisticMaterial: {\n                        roughness: 0.6,\n                        textureTiling: 20,\n                        detailTexture: 'data-gl/asset/woods.jpg'\n                    },\n                    postEffect: {\n                        enable: true,\n                        bloom: {\n                            enable: false\n                        },\n                        SSAO: {\n                            enable: true,\n                            quality: 'medium',\n                            radius: 10,\n                            intensity: 1.2\n                        },\n                        depthOfField: {\n                            enable: false,\n                            focalRange: 5,\n                            fstop: 1,\n                            blurRadius: 6\n                        }\n                    },\n                    groundPlane: {\n                        show: true,\n                        color: '#333'\n                    },\n                    light: {\n                        main: {\n                            intensity: 6,\n                            shadow: true,\n                            shadowQuality: 'high',\n                            alpha: 30\n                        },\n                        ambient: {\n                            intensity: 0\n                        },\n                        ambientCubemap: {\n                            texture: 'data-gl/asset/canyon.hdr',\n                            exposure: 2,\n                            diffuseIntensity: 1,\n                            specularIntensity: 1\n                        }\n                    },\n                    viewControl: {\n                        minBeta: -360,\n                        maxBeta: 360\n                    },\n        \n                    itemStyle: {\n                        areaColor: '#666'\n                    },\n        \n                    label: {\n                        textStyle: {\n                            color: 'white'\n                        }\n                    },\n        \n                    silent: true,\n        \n                    instancing: true,\n        \n                    boxWidth: 200,\n                    boxHeight: 1,\n        \n                    data: regions\n                }]\n            });\n        });\n    }\n    render() {\n      return <div className=\"footer\">\n            <p>京ICP备14023220号 | 京公网安备11010502031492 | 火星地产电子商务有限公司 © 2014-2018 All Rights Reserved</p>\n        </div>\n    }\n}\n\nexport default Selectmap;"]},"metadata":{},"sourceType":"module"}